cmake_minimum_required(VERSION 3.30)

add_library(ava STATIC
        ava.cpp
        ava.hpp
        creation.hpp
        creation.cpp
        vulkan.hpp
        vulkan.cpp
        detail/state.hpp
        detail/vulkan.hpp
        detail/detail.hpp
        detail/debugCallback.hpp
        detail/commandBuffer.hpp
        detail/commandBuffer.cpp
        frame.cpp
        frame.hpp
        commandBuffer.hpp
        commandBuffer.cpp
        detail/shaders.cpp
        detail/shaders.hpp
        detail/renderPass.hpp
        renderPass.cpp
        renderPass.hpp
        detail/utility.cpp
        detail/utility.hpp
        detail/vulkan.cpp
        detail/image.hpp
        image.cpp
        image.hpp
        framebuffer.cpp
        framebuffer.hpp
        graphics.cpp
        graphics.hpp
        vao.cpp
        vao.hpp
        detail/vao.hpp
        vertexAttribute.hpp
        detail/reflection.cpp
        detail/reflection.hpp
        detail/descriptors.hpp
        descriptors.cpp
        descriptors.hpp
        version.hpp
        detail/buffer.hpp
        buffer.cpp
        buffer.hpp
        memoryLocation.hpp
        detail/sampler.hpp
        sampler.cpp
        sampler.hpp
        types.hpp
        detail/vbo.hpp
        detail/ibo.hpp
        vbo.cpp
        vbo.hpp
        ibo.cpp
        ibo.hpp
        compute.cpp
        compute.hpp
        shaders.cpp
        shaders.hpp
        raii/buffer.cpp
        raii/buffer.hpp
        raii/commandBuffer.cpp
        raii/commandBuffer.hpp
        raii/types.hpp
        raii.hpp
        raii/compute.hpp
        raii/compute.cpp
        raii/frame.hpp
        raii/frame.cpp
        raii/graphics.cpp
        raii/graphics.hpp
        raii/descriptors.cpp
        raii/descriptors.hpp
        raii/image.cpp
        raii/image.hpp
        raii/sampler.cpp
        raii/sampler.hpp
        raii/vao.cpp
        raii/vao.hpp
        raii/vbo.cpp
        raii/vbo.hpp
        raii/ibo.cpp
        raii/ibo.hpp
        raii/renderPass.cpp
        raii/renderPass.hpp
        raii/framebuffer.cpp
        raii/framebuffer.hpp
        raii/shaders.cpp
        raii/shaders.hpp
        detail/vibo.hpp
        vibo.cpp
        vibo.hpp
        raii/vibo.cpp
        raii/vibo.hpp
        memoryLocation.cpp
        detail/rayTracing.hpp
        rayTracing.cpp
        rayTracing.hpp
        detail/rayTracing.cpp
        detail/buffer.cpp
        raii/rayTracing.cpp
        raii/rayTracing.hpp
)
target_link_libraries(ava PUBLIC Vulkan::Vulkan GPUOpen::VulkanMemoryAllocator vk-bootstrap::vk-bootstrap spirv-cross-core)
if (${UNIX})
        target_link_libraries(ava PUBLIC ${CMAKE_DL_LIBS})
endif ()
target_include_directories(ava PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/..)
